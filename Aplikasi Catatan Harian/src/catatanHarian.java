import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.text.ParseException;
import java.util.*;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Pongo
 */
public class catatanHarian extends javax.swing.JFrame {

    /**
     * Creates new form catatanHarian
     */
    public catatanHarian() {
        initComponents();
        Tampil_Tanggal();
    }
    
     public void Tampil_Tanggal() {
        // Mendapatkan tanggal sekarang
        java.util.Date tanggalSekarang = new java.util.Date();
        // Menentukan format tanggal
        SimpleDateFormat formatTanggal = new SimpleDateFormat("dd-MM-yyyy");
        // Mengonversi tanggal menjadi String
        String tanggal = formatTanggal.format(tanggalSekarang);
        // Menampilkan tanggal sekarang pada JDateChooser
        dateChooser.setDate(tanggalSekarang);
    
    }

    // Method untuk reset form
    public void reset() {
        txtNama.setText(""); 
        dateChooser.setDate(null);
        txtJudul.setText("");
        txtIsiCatatan.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtIsiCatatan = new javax.swing.JTextArea();
        btnSimpan = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        dateChooser = new com.toedter.calendar.JDateChooser();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Catatan Harian ");

        jLabel2.setText("Nama");

        jLabel3.setText("Isi Catatan");

        jLabel4.setText("Judul Catatan");

        jLabel5.setText("Tanggal");

        txtIsiCatatan.setColumns(20);
        txtIsiCatatan.setRows(5);
        jScrollPane2.setViewportView(txtIsiCatatan);

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnReset.setText("Batal");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Tanggal", "Judul Catatan", "Isi Catatan"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setText("Eksport");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnSimpan)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnReset)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnUbah)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKeluar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnHapus))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNama)
                                .addComponent(txtJudul)
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport)))
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnKeluar)
                    .addComponent(btnHapus)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport)
                    .addComponent(btnExport))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
                // Mendapatkan model tabel
                DefaultTableModel model = (DefaultTableModel) tabel.getModel();

                // Mendapatkan indeks baris yang dipilih
                int selectedRow = tabel.getSelectedRow();
                
                // Mengecek apakah ada kolom yang kosong
                if (txtNama.getText().trim().equals("") || dateChooser.getDate() == null || txtJudul.getText().trim().equals("") || txtIsiCatatan.getText().trim().equals("")) {
                    JOptionPane.showMessageDialog(null, "Data Yang Anda Masukkan Belum Lengkap! Silahkan Ulangi Lagi!");
                } else {
                    if (selectedRow != -1) {
                        // Mengubah data pada baris yang dipilih
                        model.setValueAt(txtNama.getText(), selectedRow, 0);          // Kolom 1: Nama
                        model.setValueAt(dateChooser.getDate(), selectedRow, 1);      // Kolom 2: Tanggal
                        model.setValueAt(txtJudul.getText(), selectedRow, 2);         // Kolom 3: Judul Catatan
                        model.setValueAt(txtIsiCatatan.getText(), selectedRow, 3);    // Kolom 4: Isi Catatan

                        JOptionPane.showMessageDialog(null, "Catatan Berhasil Diubah");
                    } else {
                        // Jika tidak ada baris yang dipilih, tambahkan baris baru
                        model.addRow(new Object[]{
                            txtNama.getText(),
                            dateChooser.getDate(),  
                            txtJudul.getText(),
                            txtIsiCatatan.getText()
                        });

                        JOptionPane.showMessageDialog(null, "Catatan Berhasil Disimpan");
                    }

                    // Reset form setelah data dimasukkan ke tabel
                    reset();
            
}
      // TODO add your handling code here:
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
             // Mendapatkan model tabel
            DefaultTableModel model = (DefaultTableModel) tabel.getModel();
                
            // Mendapatkan indeks baris yang dipilih
            int selectedRow = tabel.getSelectedRow();

            // Mengecek apakah ada baris yang dipilih
            if (selectedRow != -1) {
                // Menghapus baris yang dipilih
                model.removeRow(selectedRow);
                JOptionPane.showMessageDialog(null, "Catatan Berhasil Dihapus");
            } else {
                // Jika tidak ada baris yang dipilih
                JOptionPane.showMessageDialog(null, "Pilih baris yang ingin dihapus terlebih dahulu!");
            }        // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
             // Mengosongkan semua field
                reset();// TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
                // Mendapatkan model tabel
        DefaultTableModel model = (DefaultTableModel) tabel.getModel();

        // Mendapatkan indeks baris yang dipilih
        int selectedRow = tabel.getSelectedRow();

        // Mengecek apakah ada baris yang dipilih
        if (selectedRow != -1) {
            // Mengambil data dari baris yang dipilih dan menampilkan ke dalam field
            String nama = model.getValueAt(selectedRow, 0).toString();        // Kolom 1: Nama
            String tanggal = model.getValueAt(selectedRow, 1).toString();     // Kolom 2: Tanggal
            String judul = model.getValueAt(selectedRow, 2).toString();       // Kolom 3: Judul Catatan
            String isiCatatan = model.getValueAt(selectedRow, 3).toString();  // Kolom 4: Isi Catatan

            // Menampilkan data di field
            txtNama.setText(nama);              // Mengisi field Nama
            
            // Parsing tanggal dan menampilkan di dateChooser
            try {
                SimpleDateFormat formatTanggal = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy");  // Format sesuai dengan yang digunakan di tabel
                Date date = formatTanggal.parse(tanggal);  // Mengubah string menjadi objek Date
                dateChooser.setDate(date);                 // Mengisi field Tanggal dengan objek Date
            } catch (ParseException ex) {
                ex.printStackTrace();
            }

            txtJudul.setText(judul);             // Mengisi field Judul Catatan
            txtIsiCatatan.setText(isiCatatan);   // Mengisi field Isi Catatan
        } else {
            // Jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(null, "Pilih baris yang ingin diubah terlebih dahulu!");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
            System.exit(0); // Menutup aplikasi
               // TODO add your handling code here:
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
             // Membuka dialog untuk memilih lokasi dan nama file
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Simpan File");
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt"));
            int result = fileChooser.showSaveDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();

                // Menambahkan ekstensi .txt jika belum ada
                if (!file.getName().endsWith(".txt")) {
                    file = new File(file.getAbsolutePath() + ".txt");
                }

                BufferedWriter writer = null;
                try {
                    writer = new BufferedWriter(new FileWriter(file));

                    DefaultTableModel model = (DefaultTableModel) tabel.getModel();

                    // Menulis data dari tabel ke file
                    for (int i = 0; i < model.getRowCount(); i++) {
                        StringBuilder row = new StringBuilder();
                        for (int j = 0; j < model.getColumnCount(); j++) {
                            row.append(model.getValueAt(i, j).toString());
                            if (j < model.getColumnCount() - 1) {
                                row.append("\t");  // Pisahkan kolom dengan tab
                            }
                        }
                        writer.write(row.toString());
                        writer.newLine();  // Tambahkan baris baru setelah setiap baris data
                    }
                    JOptionPane.showMessageDialog(null, "Data Berhasil Diekspor ke File");
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Terjadi Kesalahan saat Menyimpan File: " + ex.getMessage());
                } finally {
                    try {
                        if (writer != null) {
                            writer.close();
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
              // Membuka dialog file untuk memilih file txt
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Text Files", "txt"));
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            BufferedReader reader = null;

            try {
                // Membaca file
                reader = new BufferedReader(new FileReader(file));
                String line;
                DefaultTableModel model = (DefaultTableModel) tabel.getModel();

                // Menghapus semua baris yang ada di tabel (opsional jika ingin hanya menambah, tapi bisa memilih menggunakan removeRow tergantung kebutuhan)
                // model.setRowCount(0);

                while ((line = reader.readLine()) != null) {
                    // Memisahkan data berdasarkan delimiter (misalnya tab atau koma)
                    String[] data = line.split("\t");  // Asumsikan data dipisahkan dengan tab (\t)
                    
                    // Menambahkan baris ke tabel
                    model.addRow(data);
                }
                JOptionPane.showMessageDialog(null, "Data Berhasil Diimpor dari File");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Terjadi Kesalahan saat Membaca File: " + ex.getMessage());
            } finally {
                try {
                    if (reader != null) {
                        reader.close();
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }       // TODO add your handling code here:
    }//GEN-LAST:event_btnImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(catatanHarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(catatanHarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(catatanHarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(catatanHarian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new catatanHarian().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel;
    private javax.swing.JTextArea txtIsiCatatan;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
